from manimlib.imports import *

class BeginAnimation(Scene):
    CONFIG={
        'Shannon':'Shannon.jpg'
    }
    def construct(self):
        sentence01 = TextMobject("信息是用来消除不确定性的东西", color = BLUE).shift(UP*3)
        author = TextMobject("——Shannon", color = BLUE).scale(0.9).shift(UP*2+RIGHT*3)
        Shannon = ImageMobject(self.Shannon)
        Shannon.set_height(4)
        Shannon.shift(DOWN*1.7)
        self.play(Write(sentence01), run_time = 1)
        self.wait(1)
        self.play(Write(author), run_time = 1)
        self.wait(2)
        self.play(FadeIn(Shannon), srun_time = 1)
        self.wait(2)
        group = VGroup(sentence01, author)
        self.play(FadeOut(group), FadeOut(Shannon),run_time = 1)


class Part01(Scene):
    def construct(self):
        sentence01 = TextMobject("你听说过克劳德香农吗？", color = BLUE).scale(0.8).to_edge(UP)
        sentence02 = TextMobject("我知道这个名字也许并没有图灵或爱因斯坦那样熟悉,","但是作为信息论之父，没有香农，意味着我们今天如此便捷的通信世界将不复存在", color = BLUE).scale(0.8).next_to(sentence01, DOWN)
        self.play(Write(sentence01), run_time = 1)
        self.wait(1)
        self.play(Write(sentence02[0]), run_time = 1)
        self.wait(1.5)
        self.play(Write(sentence02[1]), run_time = 1)
        self.wait(1.5)
        sentence03 = TextMobject("在香农之前，我们已经有了电话、电报这样的通讯工具", color = BLUE).scale(0.8).next_to(sentence02, DOWN)
        sentence04 = TextMobject("然后香农问了一个没有人问过的问题，是否能创造一个","通用的通信系统","呢？", color = RED).scale(0.8).next_to(sentence03, DOWN)
        self.play(Write(sentence03), run_time = 1)
        self.wait(1)
        self.play(Write(sentence04), run_time = 2)
        self.wait(2)
        self.play(Indicate(sentence04[1]))
        self.wait(1)
        group1 = VGroup(sentence01, sentence02, sentence03)
        self.play(FadeOut(group1), run_time = 1)
        self.play(sentence04.to_edge, UP)
        self.wait(1)

class Part02(Scene):
    def construct(self):
        sentence01 = TextMobject("然后香农问了一个没有人问过的问题，是否能创造一个","通用的通信系统","呢？", color = RED).scale(0.8).to_edge(UP)
        self.add(sentence01)
        sentence02 = TextMobject("首先，我们应该有信息源", color = BLUE).scale(0.8).next_to(sentence01, DOWN)
        label1 = TextMobject("Information Source", color = BLUE).scale(0.6).shift(LEFT*5)
        rec1 = Rectangle(color = BLUE).surround(label1)
        part1 = VGroup(label1, rec1)
        sentence = TextMobject("Do you love me?", color = RED).scale(0.6).shift(LEFT*5+DOWN)
        self.play(Write(sentence02))
        self.wait(1)
        self.play(ShowCreation(part1),run_time = 1)
        self.wait(2)
        self.play(Write(sentence), run_time = 1.5)
        self.wait(2)
        sentence03 = TextMobject("然后我们需要将信息转换为诸如电磁波的信号", color = BLUE).scale(0.8).next_to(sentence01, DOWN)
        self.play(ReplacementTransform(sentence02, sentence03))
        arr1 = Vector(np.array([0.8,0,0]), color = BLUE).next_to(rec1, RIGHT).shift(LEFT*0.2)
        label2 = TextMobject("Transmitter", color = GREEN).scale(0.6).next_to(arr1,RIGHT)
        rec2 = Rectangle(color = GREEN).surround(label2).set_height(1.5).set_width(2)
        part2 = VGroup(label2,rec2,arr1)
        self.wait(1)
        self.play(ShowCreation(part2))
        self.wait(1)
        sine = FunctionGraph(lambda x:np.sin(x),x_min=-2*PI,x_max=2*PI).set_color(GREEN).scale(0.2).next_to(part2, DOWN).shift(RIGHT*0.3)
        self.play(ShowCreation(sine), run_time = 1)
        self.wait(2)
        arr2 = Vector(np.array([1.65,0,0]), color = BLUE).move_to(rec2.get_corner(RIGHT)).shift(RIGHT*0.85)
        sentence04 = TextMobject("我们有这样一个信道可以传输信号", color = BLUE).scale(0.8).next_to(sentence01, DOWN)
        self.play(ReplacementTransform(sentence03, sentence04))
        self.wait(1)
        sentence05 = TextMobject("在信息进一步传输之前会有噪声的干扰", color = BLUE).scale(0.8).next_to(sentence01, DOWN)
        self.play(ReplacementTransform(sentence03, sentence04), run_time = 1)
        self.wait(1)
        label = TextMobject("Channel", color = BLUE).scale(0.6).next_to(arr2, UP)
        self.play(ShowCreation(arr2))
        self.play(Write(label))
        self.wait(2)
        self.play(ReplacementTransform(sentence04, sentence05),run_time = 1)
        self.wait(1)
        label3 = TextMobject("Noise", color = YELLOW_E).scale(0.6).shift(DOWN*3+RIGHT*0.3)
        rec3 = Rectangle(color = YELLOW_E).surround(label3)
        arr3 = Vector(np.array([0,2.5,0]), color = YELLOW_E).shift(DOWN*2.6+RIGHT*0.3)
        group3 = VGroup(label3, rec3)
        self.play(ShowCreation(group3), run_time = 1)
        self.play(ShowCreation(arr3), run_time = 1)
        sentence06 = TextMobject("然后有这样一个接收器", color = BLUE).scale(0.8).next_to(sentence01, DOWN)
        label4 = TextMobject("Receiver", color = GREEN).scale(0.6).next_to(arr2,RIGHT).shift(RIGHT*0.2)
        rec3 = Rectangle(color = GREEN).surround(label4).set_height(1.5).set_width(2)
        group4 = VGroup(label4, rec3)
        sine1 = FunctionGraph(lambda x: np.sin(x), x_min=-2 * PI, x_max=2 * PI).set_color(GREEN).scale(0.2).next_to(group4, DOWN).shift(RIGHT * 0.3)
        self.play(ReplacementTransform(sentence05, sentence06))
        self.wait(2)
        self.play(ShowCreation(group4))
        self.play(ShowCreation(sine1))
        self.wait(2)
        sentence07 = TextMobject("最后接收器将信号转化为与原信息相近的信息，送给目标", color = BLUE).scale(0.8).next_to(sentence01, DOWN)
        arr4 = Vector(np.array([0.8,0,0]), color = BLUE).next_to(rec3, RIGHT).shift(LEFT*0.3)
        label5 = TextMobject("Destination", color = BLUE).scale(0.6).next_to(arr4, RIGHT).shift(RIGHT*0.5)
        rec4 = Rectangle(color = BLUE).surround(label5).set_height(1.5)
        group5 = VGroup(label5, rec4)
        self.play(ReplacementTransform(sentence06, sentence07), run_time = 1)
        self.wait(1)
        self.play(ShowCreation(arr4))
        self.wait(1)
        self.play(ShowCreation(group5), run_time = 1)
        self.wait(1)
        circle1 = Circle(radius=0.2,fill_color = RED, color = RED, fill_opacity = 1)
        circle2 = Circle(radius=0.2,fill_color = RED, color = RED, fill_opacity = 1)
        square = Square(side_length = 0.4,fill_color = RED, color = RED, fill_opacity=1)
        love = VGroup(circle1, circle2, square)
        love.next_to(group5, DOWN)
        circle1.shift(0.2*(UP+LEFT)*np.sqrt(2)/2)
        circle2.shift(0.2*(UP+RIGHT)*np.sqrt(2)/2)
        square.rotate(np.pi/4)
        self.play(ShowCreation(love))
        self.play(Flash(love, radius = 2))
        self.wait(2)
        sentence08 = TextMobject("尽管这张图看起来如此简洁，但是香农揭示了通信问题的本质，可以应用于一切的理论", color = BLUE).scale(0.8).next_to(sentence01, DOWN)
        self.play(FadeOut(sentence07),run_time = 1)
        self.play(Write(sentence08), run_time = 2)
        self.wait(2)
        group = VGroup(part1, part2, group3, group4, group5, sentence08,sentence01,sine,sine1,sentence,love,arr4,arr3,arr2,label)
        self.play(FadeOut(group),run_time = 1)
        self.wait(1)


class Part03(Scene):
    CONFIG = {
        'star0':'starsky.jpg',
        'star1':'starsky.png',
        'star2':'starsky1.jpg',
    }
    def construct(self):
        star0 = ImageMobject(self.star0)
        star1 = ImageMobject(self.star1)
        star2 = ImageMobject(self.star2)
        sentence01 = TextMobject("然后让我们再来看香农的三个伟大的想法", color = BLUE).scale(0.8).to_edge(UP)
        self.play(Write(sentence01), run_time = 1)
        self.wait(2)
        sentence02 = TextMobject("首先，所有信息都可以转换为比特", color = BLUE).scale(0.8).next_to(sentence01, DOWN)
        self.play(Write(sentence02), run_time = 1.5)
        star0.shift(LEFT*4.5).set_height(3)
        star1.shift(RIGHT*4.5).set_height(3)
        star2.shift(RIGHT*4.5).set_height(3)
        self.play(FadeInFromLarge(star0), run_time = 1)
        self.wait(1)
        Bit = TextMobject("10010\\\\01010\\\\11011\\\\10011\\\\01010", color = RED).scale(0.8)
        vec1 = Vector(np.array([1.5,0,0]), color = BLUE).shift(LEFT*2.5)
        vec2 = Vector(np.array([1.5,0,0]), color = BLUE).shift(RIGHT)
        self.play(ShowCreation(vec1), run_time = 1)
        self.wait(1)
        self.play(Write(Bit))
        self.wait(1)
        self.play(ShowCreation(vec2))
        self.play(FadeInFromLarge(star1))
        self.wait(2)
        sentence03 = TextMobject("第二，信息中存在冗余，可以被压缩", color = BLUE).scale(0.8).next_to(sentence01, DOWN)
        self.play(FadeOut(sentence02))
        self.play(Write(sentence03), run_time = 1.5)
        Bit1 = TextMobject("110\\\\010\\\\101", color = RED).scale(0.8)
        self.wait(1)
        self.play(ReplacementTransform(Bit, Bit1), run_time = 1)
        self.wait(1)
        sentence04 = TextMobject("第三，可以通过数学的办法消除噪音", color = BLUE).scale(0.8).next_to(sentence01, DOWN)
        self.play(ReplacementTransform(sentence03, sentence04), run_time = 1)
        self.wait(1)
        self.play(FadeOut(star1))
        self.play(FadeIn(star2))
        self.wait(2)
        sentence05 = TextMobject("我们并不去探讨背后的数学原理，不过这些想法真的很棒！", color = GREEN).scale(0.8).to_edge(UP)
        self.play(ReplacementTransform(sentence01,sentence05),run_time= 1)
        self.wait(2)
        group = VGroup(sentence05,sentence04,vec1,Bit1,vec2)
        self.play(FadeOut(group), FadeOut(star0), FadeOut(star2))
        self.wait(1)

class Part04(Scene):
    def construct(self):
        sentence01 = TextMobject("我想你现在多少对于香农的理论有了一些认识，","所以你能想到的第一个应用场景在哪里呢？", color = BLUE).scale(0.8).to_edge(UP)
        self.play(Write(sentence01[0]),run_time = 1)
        self.wait(1)
        self.play(Write(sentence01[1]),run_time = 1)
        self.wait(2)
        sentence02 = TextMobject("把它用在人与人之间的沟通是一个十分不错的想法!", color = BLUE).scale(0.8).next_to(sentence01, DOWN)
        self.play(Write(sentence02),run_time = 1)
        sentence03 = TextMobject("事实上，我们之间的交流存在着大量噪声，","我们不知道对方今天经历了什么，遇到了开心或是难过的事情。", "你当然可以通过反复说或者大声说来传递信息，","但是这通常并不奏效，还可能会激怒对方。","香农告诉我们的是问题的关键在于如何表达,",
        "要对信息进行良好的编码，并在最后放一个纠错码，类似于","“However,I love you.”",color = RED).scale(0.6).next_to(sentence02,DOWN)
        self.play(Write(sentence03[0]),run_time = 1)
        self.wait(1)
        self.play(Write(sentence03[1]),run_time = 1)
        self.wait(1)
        self.play(Write(sentence03[2]), run_time=1)
        self.wait(1)
        self.play(Write(sentence03[3]), run_time=1)
        self.wait(1)
        self.play(Write(sentence03[4]), run_time=1)
        self.wait(1)
        self.play(Write(sentence03[5]), run_time=1.5)
        self.wait(1)
        self.play(DrawBorderThenFill(sentence03[6]),run_time = 1)
        self.wait(2)
        sentence04 = TextMobject("一个浪漫的想法，Right？", color = BLUE).scale(0.8).next_to(sentence03, DOWN)
        self.play(Write(sentence04), run_time = 1)
        self.wait(2)
